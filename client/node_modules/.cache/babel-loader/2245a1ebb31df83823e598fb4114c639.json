{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Flexmoney\\\\Flex_Money\\\\client\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { validateAge, validateEmail, validateName } from \"../function/functions\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [batchNumber, setBatchNumber] = useState();\n  const [gender, setGender] = useState(\"\");\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n\n  const SaveData = () => {\n    //Changing startdate format to mm/dd/year\n    var err = \"\";\n\n    if (!validateEmail(email)) {\n      err += \"Email is Not valid\\n\";\n    }\n\n    if (!validateName(name)) {\n      err += \"Name is not valid\\n\";\n    }\n\n    if (!validateAge(age)) {\n      err += \"Age must lie between 18 and 65\\n\";\n    }\n\n    if (err.length == 0) {\n      var newStartDate = \"\";\n      newStartDate += startDate[5] + startDate[6] + \"/\" + startDate[8] + startDate[9] + \"/\" + startDate.substr(0, 4); //Store the data on the database by calling the REST API\n\n      fetch(\"http://localhost:8000/user\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          age: Number(age),\n          email: email,\n          gender: gender,\n          startDate: newStartDate,\n          feesPaid: 500,\n          batchNumber: batchNumber\n        })\n      }).then(response => response.json()) //Response from the REST API\n      .then(responseData => {\n        const message_id = responseData.message_id; //If successful updation is there or successfull insertion is there\n\n        if (message_id == \"1\" || message_id == \"3\") {\n          //Store the information locally to be used later\n          localStorage.setItem(\"name\", name);\n          localStorage.setItem(\"age\", Number(age));\n          localStorage.setItem(\"email\", email);\n          localStorage.setItem(\"startDate\", newStartDate);\n          localStorage.setItem(\"batchNumber\", batchNumber); //Move to the payment dialogue box\n\n          document.querySelector(\".formContainer\").style.display = \"none\";\n          document.querySelector(\".paymentContainer\").style.display = \"flex\";\n        } //Else anything else happens then create a mockup box\n        else {\n          const message = responseData.message;\n          window.alert(message); //If plan is active then simply reload the application\n\n          if (message_id == \"2\") {\n            window.location.reload();\n          }\n        }\n      }).catch(err => {\n        console.log(`Error in accessing the server is ${err}`);\n      });\n    } else alert('There were some errors in the filling of form:-\\n' + err);\n  };\n\n  const handleNameChange = b => {\n    setName(b);\n  };\n\n  const handleEmailChange = b => {\n    setEmail(b);\n  };\n\n  const handleAgeChange = b => {\n    setAge(b);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => handleNameChange(e.target.value),\n        autocomplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"string\",\n        placeholder: \"Age\",\n        value: age,\n        onChange: e => handleAgeChange(e.target.value),\n        min: \"18\",\n        max: \"65\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"string\",\n        placeholder: \"Gender\",\n        value: gender,\n        onChange: e => setGender(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: e => handleEmailChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Starting date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batchTiming\",\n        children: [/*#__PURE__*/_jsxDEV(\"h\", {\n          children: \"Select batch timing:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"batchOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"first\",\n              name: \"batchNo\",\n              value: \"1\",\n              onChange: e => setBatchNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"first\",\n              children: \"6 AM-7 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"second\",\n              name: \"batchNo\",\n              value: \"2\",\n              onChange: e => setBatchNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"second\",\n              children: \"7 AM-8 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"third\",\n              name: \"batchNo\",\n              value: \"3\",\n              onChange: e => setBatchNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"third\",\n              children: \"8 AM-9 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"fourth\",\n              name: \"batchNo\",\n              value: \"4\",\n              onChange: e => setBatchNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"fourth\",\n              children: \"5 PM-6 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toPayment\",\n        onClick: SaveData,\n        children: [\"Continue \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"yoga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"ugU4Dh6ZUOENP65+LDM3YgX/awc=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Flexmoney/Flex_Money/client/src/Components/Form.jsx"],"names":["React","useState","useEffect","validateAge","validateEmail","validateName","Form","name","setName","age","setAge","email","setEmail","startDate","setStartDate","batchNumber","setBatchNumber","gender","setGender","localStorage","clear","SaveData","err","length","newStartDate","substr","fetch","method","headers","body","JSON","stringify","Number","feesPaid","then","response","json","responseData","message_id","setItem","document","querySelector","style","display","message","window","alert","location","reload","catch","console","log","handleNameChange","b","handleEmailChange","handleAgeChange","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  validateAge,\r\n  validateEmail,\r\n  validateName,\r\n} from \"../function/functions\";\r\n\r\nimport \"./Form.css\";\r\nfunction Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [batchNumber, setBatchNumber] = useState();\r\n  const [gender, setGender] = useState(\"\");\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n  }, []);\r\n  const SaveData = () => {\r\n    //Changing startdate format to mm/dd/year\r\n    var err = \"\";\r\n\r\n    if (!validateEmail(email)) {\r\n      err += \"Email is Not valid\\n\";\r\n    }\r\n\r\n    if (!validateName(name)) {\r\n      err += \"Name is not valid\\n\";\r\n    }\r\n\r\n    if (!validateAge(age)) {\r\n      err += \"Age must lie between 18 and 65\\n\";\r\n    }\r\n    if (err.length == 0) {\r\n      var newStartDate = \"\";\r\n      newStartDate +=\r\n        startDate[5] +\r\n        startDate[6] +\r\n        \"/\" +\r\n        startDate[8] +\r\n        startDate[9] +\r\n        \"/\" +\r\n        startDate.substr(0, 4);\r\n\r\n      //Store the data on the database by calling the REST API\r\n      fetch(\"http://localhost:8000/user\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          age: Number(age),\r\n          email: email,\r\n          gender: gender,\r\n          startDate: newStartDate,\r\n          feesPaid: 500,\r\n          batchNumber: batchNumber,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        //Response from the REST API\r\n        .then((responseData) => {\r\n          const message_id = responseData.message_id;\r\n\r\n          //If successful updation is there or successfull insertion is there\r\n          if (message_id == \"1\" || message_id == \"3\") {\r\n            //Store the information locally to be used later\r\n            localStorage.setItem(\"name\", name);\r\n            localStorage.setItem(\"age\", Number(age));\r\n            localStorage.setItem(\"email\", email);\r\n            localStorage.setItem(\"startDate\", newStartDate);\r\n            localStorage.setItem(\"batchNumber\", batchNumber);\r\n            //Move to the payment dialogue box\r\n            document.querySelector(\".formContainer\").style.display = \"none\";\r\n            document.querySelector(\".paymentContainer\").style.display = \"flex\";\r\n          }\r\n          //Else anything else happens then create a mockup box\r\n          else {\r\n            const message = responseData.message;\r\n            window.alert(message);\r\n            //If plan is active then simply reload the application\r\n            if (message_id == \"2\") {\r\n              window.location.reload();\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Error in accessing the server is ${err}`);\r\n        });\r\n    }\r\n    else alert('There were some errors in the filling of form:-\\n' + err)\r\n  };\r\n  const handleNameChange = (b) => {\r\n    setName(b);\r\n  };\r\n  const handleEmailChange = (b) => {\r\n    setEmail(b);\r\n  };\r\n  const handleAgeChange = (b) => {\r\n    setAge(b);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"formContainer\" >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={(e) => handleNameChange(e.target.value)}\r\n        autocomplete=\"off\"\r\n      />\r\n      <input\r\n        type=\"string\"\r\n        placeholder=\"Age\"\r\n        value={age}\r\n        onChange={(e) => handleAgeChange(e.target.value)}\r\n        min=\"18\"\r\n        max=\"65\"\r\n      />\r\n      <input\r\n        type=\"string\"\r\n        placeholder=\"Gender\"\r\n        value={gender}\r\n        onChange={(e) => setGender(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"E-mail\"\r\n        value={email}\r\n        onChange={(e) => handleEmailChange(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        placeholder=\"Starting date\"\r\n        value={startDate}\r\n        onChange={(e) => setStartDate(e.target.value)}\r\n      />\r\n      <div className=\"batchTiming\">\r\n        <h>Select batch timing:</h>\r\n        <div className=\"batchOptions\">\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"first\"\r\n              name=\"batchNo\"\r\n              value=\"1\"\r\n              onChange={(e) => setBatchNumber(e.target.value)}\r\n            />\r\n            <label for=\"first\">6 AM-7 AM</label>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"second\"\r\n              name=\"batchNo\"\r\n              value=\"2\"\r\n              onChange={(e) => setBatchNumber(e.target.value)}\r\n            />\r\n            <label for=\"second\">7 AM-8 AM</label>\r\n            <br />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"third\"\r\n              name=\"batchNo\"\r\n              value=\"3\"\r\n              onChange={(e) => setBatchNumber(e.target.value)}\r\n            />\r\n            <label for=\"third\">8 AM-9 AM</label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"fourth\"\r\n              name=\"batchNo\"\r\n              value=\"4\"\r\n              onChange={(e) => setBatchNumber(e.target.value)}\r\n            />\r\n            <label for=\"fourth\">5 PM-6 PM</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button className=\"toPayment\" onClick={SaveData}>\r\n        Continue <i class=\"fas fa-arrow-right\"></i>\r\n      </button>\r\n    </div>\r\n    <div>yoga</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}