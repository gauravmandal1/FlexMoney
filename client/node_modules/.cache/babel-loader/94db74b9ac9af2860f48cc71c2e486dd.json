{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Flexmoney\\\\Del\\\\Accepted\\\\F_Intern\\\\yoga_frontend\\\\src\\\\Components\\\\Payment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport './Payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [mode, setMode] = useState(\"\");\n  const [upiId, setUpiId] = useState(\"\");\n  const [cardName, setCardName] = useState(\"\");\n  const [expDate, setExpCard] = useState(\"\");\n  const [accountNo, setAccountNo] = useState(\"\");\n  const [IFSCCode, setIfscCode] = useState(\"\"); //Implement the CompletePayment function as provided\n\n  const CompletePayment = () => {\n    var err = \"\";\n\n    if (!validateCardLength(accountNo)) {\n      err += \"Email is Not valid\\n\";\n    }\n\n    if (!validateUpi(upiId)) {\n      err += \"Missing UPI Id\\n\";\n    }\n\n    if (!validateCvvLength(IFSCCode)) {\n      err += \"Invalid CVV number\\n\";\n    }\n\n    if (err.length == 0) {\n      fetch('http://localhost:8000/payment', {\n        \"method\": \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"mode\": mode,\n          \"card\": {\n            \"holderName\": cardName,\n            \"expirationDate\": expDate,\n            \"cardNo\": accountNo,\n            \"cvvCode\": IFSCCode\n          },\n          \"upiId\": upiId,\n          \"email\": localStorage.getItem(\"email\")\n        })\n      }).then(response => response.json()) //Response from the REST API\n      .then(responseData => {\n        const message_id = responseData.message_id; //If data is updated or stored successfully\n\n        if (message_id == 1 || message_id == 3) {\n          document.querySelector(\".paymentContainer\").style.display = \"none\";\n          document.querySelector(\".completionContainer\").style.display = \"flex\";\n        } //Else create mock up box for any other response\n        else {\n          const message = responseData.message;\n          window.alert(message);\n        }\n      }).catch(err => {\n        console.log(`Error in accessing the server is ${err}`);\n      });\n    } else alert('There were some errors in the filling of form:-\\n' + err);\n\n    const handleAccountChange = b => {\n      setAccountNo(b);\n    };\n\n    const handleEmailChange = b => {\n      setEmail(b);\n    };\n\n    const handleAgeChange = b => {\n      setAge(b);\n    }; //Store the data on database by calling the REST API\n    //   fetch('http://localhost:8000/payment',{\n    //       \"method\":\"post\",\n    //       headers:{\n    //         \"Content-Type\":\"application/json\"\n    //       },\n    //       body:JSON.stringify({\n    //         \"mode\":mode,\n    //         \"card\":{\n    //             \"holderName\":cardName,\n    //             \"expirationDate\":expDate,\n    //             \"cardNo\":accountNo,\n    //             \"cvvCode\":IFSCCode\n    //         },\n    //         \"upiId\":upiId,\n    //         \"email\":localStorage.getItem(\"email\")\n    //     })\n    //   }).then((response)=>response.json())\n    //   //Response from the REST API\n    //   .then((responseData)=>{\n    //        const message_id=responseData.message_id\n    //        //If data is updated or stored successfully\n    //        if(message_id==1||message_id==3){\n    //         document.querySelector(\".paymentContainer\").style.display=\"none\"\n    //         document.querySelector(\".completionContainer\").style.display=\"flex\"\n    //        }\n    //        //Else create mock up box for any other response\n    //        else{\n    //            const message=responseData.message\n    //            window.alert(message)\n    //        }\n    //   })\n    //   .catch((err)=>{\n    //     console.log(`Error in accessing the server is ${err}`)\n    //   })\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paymentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h\", {\n      className: \"amountDisclaimer\",\n      children: \"Net amount to be paid: 500 (in Rupess)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n      className: \"optionsHeader\",\n      children: \"Choose Payment mode:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"card\",\n            name: \"optionNo\",\n            value: mode,\n            onChange: e => setMode('card')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"card\",\n            children: \"Debit/ATM Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardDetailsDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cardName\",\n            name: \"cardName\",\n            value: cardName,\n            onChange: e => setCardName(e.target.value),\n            placeholder: \"Card holder's name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"expDate\",\n            name: \"expDate\",\n            value: expDate,\n            onChange: e => setExpCard(e.target.value),\n            placeholder: \"Expiration date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"accountNo\",\n            name: \"accountNo\",\n            value: accountNo,\n            onChange: e => handleAccountChange(e.target.value),\n            placeholder: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"IFSCCode\",\n            name: \"IFSCCode\",\n            value: IFSCCode,\n            onChange: e => setIfscCode(e.target.value),\n            placeholder: \"CVV Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upiDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"UPI\",\n            name: \"optionNo\",\n            value: mode,\n            onChange: e => setMode('upi')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"UPI\",\n            children: \"UPI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"UPI_ID\",\n          name: \"upi_id\",\n          value: upiId,\n          onChange: e => setUpiId(e.target.value),\n          placeholder: \"UPI Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toCompletion\",\n        onClick: CompletePayment,\n        children: [\"Complete Payment \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 93\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"rNifQqVVZO46iuhW+0OxNGFl2+A=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Flexmoney/Del/Accepted/F_Intern/yoga_frontend/src/Components/Payment.jsx"],"names":["React","useState","Loader","Payment","mode","setMode","upiId","setUpiId","cardName","setCardName","expDate","setExpCard","accountNo","setAccountNo","IFSCCode","setIfscCode","CompletePayment","err","validateCardLength","validateUpi","validateCvvLength","length","fetch","headers","body","JSON","stringify","localStorage","getItem","then","response","json","responseData","message_id","document","querySelector","style","display","message","window","alert","catch","console","log","handleAccountChange","b","handleEmailChange","setEmail","handleAgeChange","setAge","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport './Payment.css'\r\nfunction Payment() {\r\n    const [mode,setMode]=useState(\"\")\r\n    const [upiId,setUpiId]=useState(\"\")\r\n    const [cardName,setCardName]=useState(\"\")\r\n    const [expDate,setExpCard]=useState(\"\")\r\n    const [accountNo,setAccountNo]=useState(\"\")\r\n    const [IFSCCode,setIfscCode]=useState(\"\")\r\n\r\n    //Implement the CompletePayment function as provided\r\n    const CompletePayment=()=>{\r\n        \r\n        var err = \"\";\r\n        \r\n        \r\n        if (!validateCardLength(accountNo)) {\r\n          err += \"Email is Not valid\\n\";\r\n        }\r\n    \r\n        if (!validateUpi(upiId)) {\r\n          err += \"Missing UPI Id\\n\";\r\n        }\r\n    \r\n        if (!validateCvvLength(IFSCCode)) {\r\n          err += \"Invalid CVV number\\n\";\r\n        }\r\n        if (err.length == 0) {\r\n            fetch('http://localhost:8000/payment',{\r\n              \"method\":\"post\",\r\n              headers:{\r\n                \"Content-Type\":\"application/json\"\r\n              },\r\n              body:JSON.stringify({\r\n                \"mode\":mode,\r\n                \"card\":{\r\n                    \"holderName\":cardName,\r\n                    \"expirationDate\":expDate,\r\n                    \"cardNo\":accountNo,\r\n                    \"cvvCode\":IFSCCode\r\n                },\r\n                \"upiId\":upiId,\r\n                \"email\":localStorage.getItem(\"email\")\r\n            })\r\n          }).then((response)=>response.json())\r\n          //Response from the REST API\r\n          .then((responseData)=>{\r\n               const message_id=responseData.message_id\r\n               //If data is updated or stored successfully\r\n               if(message_id==1||message_id==3){\r\n                document.querySelector(\".paymentContainer\").style.display=\"none\"\r\n                document.querySelector(\".completionContainer\").style.display=\"flex\"\r\n               }\r\n               //Else create mock up box for any other response\r\n               else{\r\n                   const message=responseData.message\r\n                   window.alert(message)\r\n               }\r\n          })\r\n          .catch((err)=>{\r\n            console.log(`Error in accessing the server is ${err}`)\r\n          })\r\n           }\r\n        else alert('There were some errors in the filling of form:-\\n' + err)\r\n      \r\n      const handleAccountChange = (b) => {\r\n        setAccountNo(b);\r\n      };\r\n      const handleEmailChange = (b) => {\r\n        setEmail(b);\r\n      };\r\n      const handleAgeChange = (b) => {\r\n        setAge(b);\r\n      };\r\n          //Store the data on database by calling the REST API\r\n        //   fetch('http://localhost:8000/payment',{\r\n        //       \"method\":\"post\",\r\n        //       headers:{\r\n        //         \"Content-Type\":\"application/json\"\r\n        //       },\r\n        //       body:JSON.stringify({\r\n        //         \"mode\":mode,\r\n        //         \"card\":{\r\n        //             \"holderName\":cardName,\r\n        //             \"expirationDate\":expDate,\r\n        //             \"cardNo\":accountNo,\r\n        //             \"cvvCode\":IFSCCode\r\n        //         },\r\n        //         \"upiId\":upiId,\r\n        //         \"email\":localStorage.getItem(\"email\")\r\n        //     })\r\n        //   }).then((response)=>response.json())\r\n        //   //Response from the REST API\r\n        //   .then((responseData)=>{\r\n        //        const message_id=responseData.message_id\r\n        //        //If data is updated or stored successfully\r\n        //        if(message_id==1||message_id==3){\r\n        //         document.querySelector(\".paymentContainer\").style.display=\"none\"\r\n        //         document.querySelector(\".completionContainer\").style.display=\"flex\"\r\n        //        }\r\n        //        //Else create mock up box for any other response\r\n        //        else{\r\n        //            const message=responseData.message\r\n        //            window.alert(message)\r\n        //        }\r\n        //   })\r\n        //   .catch((err)=>{\r\n        //     console.log(`Error in accessing the server is ${err}`)\r\n        //   })\r\n    }\r\n    return (\r\n        <div className=\"paymentContainer\">\r\n            <h className=\"amountDisclaimer\">Net amount to be paid: 500 (in Rupess)</h>\r\n            <h className=\"optionsHeader\">Choose Payment mode:</h>\r\n            <div>\r\n                <div className=\"cardDiv\">\r\n                    <div className=\"optionDiv\">\r\n                    <input type=\"radio\" id=\"card\" name=\"optionNo\" \r\n                    value={mode}\r\n                    onChange={((e)=>setMode('card'))}\r\n                    />\r\n                    <label for=\"card\">Debit/ATM Card</label>\r\n                    </div>\r\n                    <div className=\"cardDetailsDiv\">\r\n                    <input type=\"text\" id=\"cardName\" name=\"cardName\"\r\n                    value={cardName}\r\n                    onChange={((e)=>setCardName(e.target.value))}\r\n                    placeholder=\"Card holder's name\"\r\n                    />\r\n                    <input type=\"text\" id=\"expDate\" name=\"expDate\"\r\n                    value={expDate}\r\n                    onChange={((e)=>setExpCard(e.target.value))}\r\n                    placeholder=\"Expiration date\"\r\n                    />\r\n                    <input type=\"text\" id=\"accountNo\" name=\"accountNo\"\r\n                    value={accountNo}\r\n                    onChange={((e)=>handleAccountChange(e.target.value))}\r\n                    placeholder=\"Card Number\"\r\n                    />\r\n                    <input type=\"password\" id=\"IFSCCode\" name=\"IFSCCode\"\r\n                    value={IFSCCode}\r\n                    onChange={((e)=>setIfscCode(e.target.value))}\r\n                    placeholder=\"CVV Code\"\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"upiDiv\">\r\n                    <div className=\"optionDiv\">\r\n                    <input type=\"radio\" id=\"UPI\" name=\"optionNo\" \r\n                    value={mode}\r\n                    onChange={((e)=>setMode('upi'))}\r\n                    />\r\n                    <label for=\"UPI\">UPI</label>\r\n                    </div>\r\n                    <input type=\"text\" id=\"UPI_ID\" name=\"upi_id\" \r\n                    value={upiId} \r\n                    onChange={((e)=>setUpiId(e.target.value))}\r\n                    placeholder=\"UPI Id\"\r\n                    />\r\n                </div>\r\n                <button className=\"toCompletion\" onClick={CompletePayment}>Complete Payment <i class=\"fas fa-arrow-right\"></i></button>\r\n            </div>\r\n            {/*<Loader\r\n                    className=\"loader\"\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n            />*/}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}